import os
from snakemake.utils import min_version

min_version("7.32.4")

configfile: "config/config.yml"

### helper functions

def revComplementary(seq):
    """ Returns the reverse complementary of a DNA sequence
        All IUPAC codes included
    """
    trans_dict = {"A":"T","C":"G","G":"C","T":"A",
                  "N":"N","R":"Y","Y":"R","S":"S",
                  "W":"W","K":"M","M":"K","B":"V",
                  "V":"B","D":"H","H":"D"}
    return "".join([trans_dict[nt] for nt in seq[::-1]])

### create log dirs

logdirs = ["default",
          "all",
          "fastqc_before",
          "cutadapt",
          "fastqc_after",
          "multiqc",
          "create_manifest",
          "import_fastq",
          "itsxpress",
          "dada2"]

for d in logdirs:
    os.makedirs(os.path.join("logs", d), exist_ok = True)

## create outdir

os.makedirs(os.path.join(config["outdir"], config["proj_name"]), exist_ok = True)

## sample names

SAMPLES = list(set([s[:-len("_RX.fastq.gz")] for s in os.listdir(config["raw_data"])]))

## output handling

alloutput = list()
alloutput.append(config["outdir"] + "/" + config["proj_name"] + "/multiqc/multiqc_report.html")
alloutput.append(config["outdir"] + "/" + config["proj_name"] + "/qiime2/itsxpress/its_seqs.qza")
alloutput.append(config["outdir"] + "/" + config["proj_name"] + "/qiime2/itsxpress/its_seqs.qzv")

rule all:
    input:
        alloutput

### load rules

include: "rules/fastqc_before.smk"
include: "rules/cutadapt.smk"
include: "rules/fastqc_after.smk"
include: "rules/multiqc.smk"
include: "rules/create_manifest.smk"
include: "rules/import_fastq.smk"
include: "rules/itsxpress.smk"
# include: "rules/dada2.smk"